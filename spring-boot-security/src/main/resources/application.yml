server:
  port: 8081

  error:
    whitelabel:
      enabled: false

  session:
    timeout: 30  #30秒过期



spring:
  datasource:
    test:
#      driver-class-name: org.h2.Driver
#      url: jdbc:h2:file:G:\idea_workspace\my_workspace\例子\springBoot-demo\spring-boot-jpa-h2\db\db_data\data
#      username: sa
#      password: sa
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://127.0.0.1/demo?useUnicode:true&amp;characterEncoding=utf-8&amp;autoReconnect=true
      username: root
      password: 123456

      max-active: 50
      max-idle: 50 #最大空闲连接
      min-idle: 10 #最小空闲连接
      validation-query-timeout: 20
      log-validation-errors: true
      validation-interval: 60000 #避免过度验证，保证验证不超过这个频率——以毫秒为单位。如果一个连接应该被验证，但上次验证未达到指定间隔，将不再次验证。
      validation-query: SELECT 1 #SQL 查询， 用来验证从连接池取出的连接， 在将连接返回给调用者之前。 如果指定， 则查询必须是一个SQL SELECT 并且必须返回至少一行记录
      test-on-borrow: true #指明是否在从池中取出连接前进行检验， 如果检验失败， 则从池中去除连接并尝试取出另一个。注意： 设置为true 后如果要生效，validationQuery 参数必须设置为非空字符串
      test-on-return: true #指明是否在归还到池中前进行检验 注意： 设置为true 后如果要生效validationQuery 参数必须设置为非空字符串
      idle-timeout: 30000
      connection-test-query: SELECT 1
      num-tests-per-eviction-run: 50 #在每次空闲连接回收器线程(如果有)运行时检查的连接数量，最好和maxActive
      test-while-idle: true #指明连接是否被空闲连接回收器(如果有)进行检验，如果检测失败，则连接将被从池中去除
      min-evictable-idle-time-millis: 3600000 #连接池中连接，在时间段内一直空闲，被逐出连接池的时间(1000*60*60)，以毫秒为单位
      time-between-eviction-runs-millis: 300000 #在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位，一般比minEvictableIdleTimeMillis小


  # REDIS
  redis:
    host: 172.19.103.88 # Redis server host.
    port: 6379 # Redis server port.
#    password: jkzl_ehr
    database: 6 # Database index used by the connection factory.
    password: # Login password of the redis server.
    timeout: 120000 # 连接超时时间（毫秒） 60秒
    pool:
      max-active: 20 # 连接池最大连接数（使用负值表示没有限制）
      max-wait: -1  # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-idle: 20  # 连接池中的最大空闲连接
      min-idle: 5  # 连接池中的最小空闲连接

  session:
    store-type: REDIS





hibernate:
  dialect: org.hibernate.dialect.MySQL5Dialect
  show_sql: true
  format_sql: true
  hbm2ddl:
    #create：表示启动的时候先drop，再create
    #create-drop: 也表示创建，只不过再系统关闭前执行一下drop
    #update: 这个操作启动的时候会去检查schema是否一致，如果不一致会做scheme更新
    auto: create
  ejb:
    naming_strategy: org.hibernate.cfg.ImprovedNamingStrategy  #默认只支持驼峰式

